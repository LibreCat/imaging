# configuration file for development environment
session: "cookie"
session_cookie_key: "Imaging"
 
#myparser: !!perl/hash:Rft_id::Common {}
# the logger engine to use
# console: log messages to STDOUT (your console where you started the
#          application server)
# file:    log message to a file in log/
logger: "console"

# the log level for this environement
# core is the lowest, it shows Dancer's core log messages as well as yours
# (debug, warning and error)
log: "debug"

# should Dancer consider warnings as critical errors?
warnings: 0

# should Dancer show a stacktrace when an error is caught?
show_errors: 1
route_cache: 1
startup_info: 0
# auto_reload is a development and experimental feature
# you should enable it by yourself if you want it
# Module::Refresh is needed 
# 
# Be aware it's unstable and may cause a memory leak.
# DO NOT EVER USE THAT FEATURE IN PRODUCTION 
# OR TINY KITTENS SHALL DIE WITH LOTS OF SUFFERING
auto_reload: 0
plugins:
 Database:
  driver: mysql
  database: imaging
  host: localhost
  port: 3306
  username: imaging
  password: imaging
  dbi_params:
   RaiseError: 1
   AutoCommit: 1
   mysql_auto_reconnect: 1
  on_connect_do:
   - "CREATE TABLE IF NOT EXISTS users (id int(11) NOT NULL AUTO_INCREMENT,name varchar(255) DEFAULT NULL,login varchar(255) NOT NULL,password mediumtext NOT NULL,roles mediumtext,profile_id varchar(256),PRIMARY KEY (id),UNIQUE(name),UNIQUE(login)) ENGINE=INNODB DEFAULT CHARSET=utf8"
   - "INSERT IGNORE INTO users (name, login, password, roles) VALUES ('Administrator','admin',MD5('admin'),'admin, user')"
 Auth::RBAC:
  credentials:
   class: MySQL
  permissions:
   class: Config
   options:
    control:
     admin:
      permissions:
       manage_accounts:
        operations: ["edit"]
       directories:
        operations: ["edit"]
       projects:
        operations: ["edit"]
       scans:
        operations: ["edit","comment"]
     collectie_beheerder:
      permissions:
       projects: 
        operations: ["edit"]
       scans:
        operations: ["comment"]
     scanner:
      permissions:
       directories: 
        operations: ["view"]
       scans:
        operations: ["comment"]
     it manager:
      permissions:
       manage_accounts:
        operations: ["edit"]
       directories:
        operations: ["edit"]
       scans:
        operations: ["comment"]
     qa_manager:
      permissions:
       scans:
        operations: ["edit","comment"]
     archivaris: {}
     catalograaf: {}
cache: {}
store:
 core:
  package: "Catmandu::Store::DBI"
  options:
   data_source: "dbi:mysql:database=imaging"
   username: imaging
   password: imaging
 index:
  package: "Catmandu::Store::Solr"
  options:
   url: "http://localhost:8983/solr/core0"
 index_log:
  package: "Catmandu::Store::Solr"
  options:
   url: "http://localhost:8983/solr/core1"
index:
 meercat: &meercatindex
  url: "http://localhost:4000/solr"
app:
 scans:
  facet_fields: ["project_name","status"]
  edit:
   baginfo:
    - key: "DC-Title"
    - key: "DC-Identifier"
    - key: "DC-Description"
    - key: "DC-Type"
      values: ["Text","audio","Sound","Image","Dataset","MovingImage","Sound","MovingImage"]
    - key: "DC-Creator"
    - key: "DC-AccessRights"
      values: ["open","closed","ugent"]
    - key: "DC-Subject"
default_app: "/projects"
refresh_rate: 5
all: {}
mounts:
 directories:
  path: "/mnt/data01"
  subdirectories:
   ready: "01_ready"
   processed: "02_processed"
   reprocessing: "03_reprocessing"
  network_directories:
   processed:
    windows: "I:\\"
    samba: "smb://localhost/02_processed"
   ready:
    windows: "J:\\"
    samba: "smb://localhost/01_ready"
status:
 change:
  all:
   incoming: ["incoming_error","incoming_ok"]
   incoming_back: ["incoming_error","incoming_ok"]
   incoming_error: ["incoming_ok"]
   incoming_ok: ["incoming_error","registering"]
   registering: ["registered"]
   registered: ["reprocess_scans","reprocess_metadata","reprocess_derivatives","qa_control_ok"]
   reprocess_scans: ["reprocess_metadata","reprocess_derivatives","qa_control_ok"]
   reprocess_metadata: ["reprocess_scans","reprocess_derivatives","qa_control_ok"]
   reprocess_derivatives: ["reprocess_scans","reprocess_metadata","qa_control_ok"]
   qa_control_ok: ["reprocess_scans","reprocess_metadata","reprocess_derivatives","qa_control_ok","archived"]
   archived: ["archived_ok"]
   archived_ok: ["published"]
   published: ["published_ok"]
  qa_control:
   registered: 
    values: ["reprocess_scans","reprocess_metadata","reprocess_derivatives","qa_control_ok"]
    messages:
     reprocess_scans: "Deze wijziging is permanent! Bent u zeker?"
   reprocess_scans:
    values: []
   reprocess_metadata: 
    values: ["registered","reprocess_scans","reprocess_derivatives","qa_control_ok"]
    messages:
     reprocess_scans: "Deze wijziging is permanent! Bent u zeker?"
   reprocess_derivatives: 
    values: ["registered","reprocess_scans","reprocess_metadata","qa_control_ok"]
    messages:
     reprocess_scans: "Deze wijziging is permanent! Bent u zeker?"
   qa_control_ok: 
    values: ["registered","reprocess_scans","reprocess_metadata","reprocess_derivatives"]
    messages:
     reprocess_scans: "Deze wijziging is permanent! Bent u zeker?"
   archived:
    values: ["archived_ok","qa_control_ok"]
   archived_ok:
    values: ["archived","qa_control_ok"]
   published:
    values: ["published_ok","qa_control_ok"]
   published_ok:
    values: ["published","qa_control_ok"]
human_readable:
 incoming: "aangeboden scan"
 incoming_back: "opnieuw aangeboden scan"
 incoming_error: "automatische check gefaald"
 incoming_ok: "automatische check successvol"
 registering: "registratie bezig"
 registered: "registratie voltooid"
 reprocess_scans: "terug naar scanner"
 reprocess_metadata: "terug naar catalografie"
 reprocess_derivatives: "afgeleiden foutief"
 qa_control_ok: "qa controle succesvol"
 archived: "gearchiveerd"
 archived_ok: "archivering ok"
 published: "gepubliceerd"
 published_ok: "publicatie ok"
profiles:
 NARA:
  packages:
   - class: "Imaging::Test::Dir::scan"
     args: {}
     on_error: "stop"
   - class: "Imaging::Test::Dir::checkPermissions"
     args: {}
     on_error: "continue"
   - class: "Imaging::Test::Dir::checkEmpty"
     args: {}
     on_error: "continue"
   - class: "Imaging::Test::Dir::checkFileExtension"
     args:
      extensions: ["txt","tif"]
     on_error: "continue"
   - class: "Imaging::Test::Dir::checkTIFF"
     args:
      valid_patterns:
       - '^(?!manifest\.txt$)'
     on_error: "continue"
   - class: "Imaging::Test::Dir::NARA::checkFilename"
     args:
      valid_patterns:
       - '^(?!manifest\.txt$)'
     on_error: "continue"
   - class: "Imaging::Test::Dir::checkAleph"
     args:
      solr_args: *meercatindex
     on_error: "continue"
