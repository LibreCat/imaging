#!/bin/sh
#
# imaging
#
# chkconfig: 345 85 15
# description: imaging application

# pidfile: /var/run/imaging.pid

PID=/var/run/imaging.pid

# Source function library.
. /etc/rc.d/init.d/functions

# Source networking configuration.
. /etc/sysconfig/network

# Check that networking is up.
[ "$NETWORKING" = "no" ] && exit 1

SERVER_PORT=5000
SERVER_WORKERS=15
SERVER_USER="imaging"
SERVER_GROUP="imaging"
DANCER_DIR="/opt/imaging"
ACCESS_LOG="/var/log/imaging/access.log"
ERROR_LOG="/var/log/imaging/error.log"
PLACK_ENV="production"
plackup="/usr/local/bin/plackup"
lockfile=/var/lock/subsys/imaging

[ -f /etc/sysconfig/imaging.conf ] && . /etc/sysconfig/imaging.conf

starman_args="--pid $PID --workers $SERVER_WORKERS --user $SERVER_USER --group $SERVER_GROUP --error-log $ERROR_LOG --disable-keepalive --max-requests 50"
plackup_args="-E $PLACK_ENV -p $SERVER_PORT --access-log $ACCESS_LOG -s Starman $starman_args -D"
DANCER_APP="$DANCER_DIR/bin/app.pl"
website="imaging"

start() {
  [ -x $plackup ] || exit 5
  [ -f $DANCER_APP ] || exit 6
  echo -n $"Starting $website: "
  $plackup $plackup_args -a $DANCER_APP 2>&1 > /dev/null
  retval=$?
  if [ $retval -eq 0 ]; then
    success $"$website started"
    touch $lockfile
  else
    failure $"Unable to start"
  fi
  echo
  return $retval
}

status () {
  if [ -f $PID ]; then

    kill -0 `cat $PID` &> /dev/null
    retval=$?
    if [ $retval -eq 0 ]; then

      echo "$website is running"
      success
      echo
      return $retval

    else

      echo "$website is not running, but pidfile $PID exists"
      failure

    fi

  else

    echo "$website is not running"
    failure

  fi

  echo

  return 1
}
stop() {
  echo -n $"Stopping $website: "
  if [ -f $PID ]; then
    kill `cat $PID` 2>&1> /dev/null
    retval=$?
    [ $retval -eq 0 ] && success && rm -f $lockfile
    echo
    return $retval
  fi
  failure $"pid $PID not found"
  echo
  return 1
}

restart() {
  stop
  start
}

case "$1" in
  start)
      $1
      ;;
  stop)
      $1
      ;;
  restart)
      $1
      ;;
  status)
      $1
      ;;
  *)
    echo $"Usage: $0 {start|stop|restart}"
    exit 2
esac

